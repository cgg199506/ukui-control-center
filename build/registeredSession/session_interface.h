/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -p session_interface.h: ../../registeredSession/conf/org.ukui.ukcc.session.xml
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef SESSION_INTERFACE_H
#define SESSION_INTERFACE_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface org.ukui.ukcc.session.interface
 */
class OrgUkuiUkccSessionInterfaceInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.ukui.ukcc.session.interface"; }

public:
    OrgUkuiUkccSessionInterfaceInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = nullptr);

    ~OrgUkuiUkccSessionInterfaceInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<QString> GetSecurityConfigPath()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("GetSecurityConfigPath"), argumentList);
    }

    inline QDBusPendingReply<> ReloadSecurityConfig()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("ReloadSecurityConfig"), argumentList);
    }

    inline QDBusPendingReply<> exitService()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("exitService"), argumentList);
    }

    inline QDBusPendingReply<QVariantMap> getModuleHideStatus()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("getModuleHideStatus"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void configChanged();
};

namespace org {
  namespace ukui {
    namespace ukcc {
      namespace session {
        typedef ::OrgUkuiUkccSessionInterfaceInterface interface;
      }
    }
  }
}
#endif
